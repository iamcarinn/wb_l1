/*
К каким негативным последствиям может привести данный фрагмент кода, и как это исправить?
Приведите корректный пример реализации.


var justString string

func someFunc() {
  v := createHugeString(1 << 10)
  justString = v[:100]	// срез ссылается на всю исходную строку v
}

func main() {
  someFunc()
}
*/

/*
Проблема кода заключается в том, что срез v[:100] ссылается на всю строку v,
занимающую 1024 байта. Даже если мы используем только первые 100 символов,
оставшаяся часть всё равно занимает память, что может привести к утечке.

Глобальная переменная может привести к ошибкам, так как её можно случайно
изменить из любого места в программе, и это трудно отследить.
*/

package main

import "fmt"

// Функция, создающая строку указанного размера
func createHugeString(size int) string {
	return string(make([]byte, size))	// создаем строку с нужным количеством символов
}

func someFunc() string {
	v := createHugeString(1 << 10) // создаем строку размером 1024 символа
	return string(v[:100])         // создаем копию первых 100 символов
}

func main() {
	justString := someFunc() // не используем глобальную переменную
	fmt.Println(justString)
}

